@{
    Layout = "_DashBoard";

}
@model Report
@section NavBar{
    
        <partial name="_NavBarPV" />


    <br />
    <br />
    <br />
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Subscriptions</h6>
    </div>
    <div class="card-body">
        <h4 class="small font-weight-bold">
            Beta Subscription Percentage <span class="float-right">@Model.BetaSubscriptionMembers%</span>
        </h4>
        <div class="progress mb-4">
            <div class="progress-bar bg-danger" role="progressbar" style="width: @Model.BetaSubscriptionMembers%"
                 aria-valuenow="@Model.BetaSubscriptionMembers" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
        <h4 class="small font-weight-bold">
            Alpha Subscription Percentage <span class="float-right">@Model.AlphaSubscriptionMembers%</span>
        </h4>
        <div class="progress mb-4">
            <div class="progress-bar bg-warning" role="progressbar" style="width: @Model.AlphaSubscriptionMembers%"
                 aria-valuenow="@Model.AlphaSubscriptionMembers" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
        <h4 class="small font-weight-bold">
            Omega Subscription Percentage <span class="float-right">@Model.OmegaSubscriptionMembers%</span>
        </h4>
        <div class="progress mb-4">
            <div class="progress-bar" role="progressbar" style="width: @Model.OmegaSubscriptionMembers%"
                 aria-valuenow="@Model.OmegaSubscriptionMembers" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
        @*<h4 class="small font-weight-bold">
            Payout Details <span class="float-right">80%</span>
        </h4>
        <div class="progress mb-4">
            <div class="progress-bar bg-info" role="progressbar" style="width: 80%"
                 aria-valuenow="80" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
        <h4 class="small font-weight-bold">
            Account Setup <span class="float-right">Complete!</span>
        </h4>
        <div class="progress">
            <div class="progress-bar bg-success" role="progressbar" style="width: 100%"
                 aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
        </div>*@
    </div>
</div>

@* TOP TIER SECTION *@
@section TopTier{
    <div class="row">

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Omega Subscription (Annual)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">$@Model.OmegaSubscriptionMoney</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Alpha Subscription (Annual)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">$@Model.AlphaSubscriptionMoney</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                        
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                                        Beta Subscription (Annual)
                                    </div>
                                    <div class="h5 mb-0 font-weight-bold text-gray-800">$@Model.BetaSubscriptionMoney</div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pending Requests Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Total Earnings (Annual)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">$
                                @(Model.AlphaSubscriptionMoney + Model.BetaSubscriptionMoney + Model.OmegaSubscriptionMoney)
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@*  my pie chart*@
@section Donut{
    <div class="card-body">
        <div class="false-For-Bottom-Text">
            <div class="mypiechart">
                <canvas id="myCanvas2" width="300" height="300"></canvas>
            </div>
            <hr>
        </div>

        <div class="mt-4 text-center small">
            <span class="mr-2">
                <i class="fas fa-circle text-primary"></i> Omega
            </span>
            <span class="mr-2">
                <i class="fas fa-circle text-warning"></i> Alpha
            </span>
            <span class="mr-2">
                <i class="fas fa-circle text-danger"></i> Beta   
            </span>
        </div>
    </div>
}
@section AreaChart{
    <div class="col-xl-8 col-lg-7">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Ratings Chart</h6>
                @* <div class="dropdown no-arrow">
            <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
            </a>
            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
            aria-labelledby="dropdownMenuLink">
            <div class="dropdown-header">Dropdown Header:</div>
            <a class="dropdown-item" href="#">Action</a>
            <a class="dropdown-item" href="#">Another action</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="#">Something else here</a>
            </div>
            </div>*@
            </div>
            <!-- Card Body -->
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="myCanvas" width="700" height="339" style="border:1px solid #d3d3d3;"> </canvas>
                </div>
            </div>
        </div>
    </div>
}


@* illustrations*@
@section Illustrations
{
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Top Tier Book</h6>
        </div>
        <div class="card-body">
            <div class="text-center">
                <img class="img-fluid px-3 px-sm-4 mt-3 mb-4" style="width: 25rem;"
                     src="@((await ViewBag.TopBooks)[0].ImagePath)" alt="...">
            </div>
            <p>
                The aforementioned book is the highest book with the highest rating. It has a rating of @((await ViewBag.TopBooks)[0].Rating). @((await ViewBag.TopBooks)[0].Name) is one of our website highlights at the current moment.
            </p>
     
        </div>
    </div>
}

@* Approach*@
@section Approach 
{
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Current highest subscription revenue</h6>
        </div>
        <div class="card-body">
            <p>
            <p>
                Our Current highest subscription revenue is @if(Model.BetaSubscriptionMoney >= @Model.AlphaSubscriptionMoney && @Model.BetaSubscriptionMoney >= @Model.OmegaSubscriptionMoney)
                    {
                        @Model.BetaSubscriptionMoney
                    }
                    else if (Model.AlphaSubscriptionMoney >= Model.BetaSubscriptionMoney && Model.AlphaSubscriptionMoney >= Model.OmegaSubscriptionMoney)
                    {
                        @Model.AlphaSubscriptionMoney
                    }
                    else
                    {
                        @Model.OmegaSubscriptionMoney
                    } 
            </p>
            </p>
            <p class="mb-0">
               This current revenue covers most of our employees expenses.
            </p>
        </div>
    </div>
}

@section subbed
{
    <div class="row">
        <div class="col-lg-6 mb-4">
            <div class="card bg-danger text-white shadow">
                <div class="card-body">
                    Omega
                    <div class="text-black-50 small" style="color: black; font-weight: bold;"> total omega members: @Model.OmegaSubscriptionMembers</div>
                </div>
            </div>
        </div>
        <div class="col-lg-6 mb-4">
            <div class="card bg-warning text-white shadow">
                <div class="card-body">
                    Alpha
                    <div class="text-black-50 small" style="color: black; font-weight: bold;">total Alpha members: @Model.AlphaSubscriptionMembers</div>
                </div>
            </div>
        </div>
        <div class="col-lg-6 mb-4">
            <div class="card bg-primary text-white shadow">
                <div class="card-body">
                    Beta
                    <div class="text-black-50 small" style="color: black; font-weight: bold;">total Beta members: @Model.BetaSubscriptionMembers</div>
                </div>
            </div>
        </div>





    </div>

                            </div>
}

@section GenerateReport{
  
<a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm" id="extractButton">
        <i class="fas fa-download fa-sm text-white-50"></i> Generate Report
    </a>
}

<script src="https://unpkg.com/xlsx/dist/xlsx.full.min.js"></script>
<script>
    document.getElementById("extractButton").addEventListener("click", function () {
        var firstbook = '@((await ViewBag.TopBooks)[0].Name)';
        var firstbookrating = '@((await ViewBag.TopBooks)[0].Rating)';
        //----
        var secondbook = '@((await ViewBag.TopBooks)[1].Name)';
        var secondbookrating = '@((await ViewBag.TopBooks)[1].Rating)';
        //----
        var thirdbook = '@((await ViewBag.TopBooks)[2].Name)';
        var thirdbookrating = '@((await ViewBag.TopBooks)[2].Rating)';
        //-----
        var workbook = XLSX.utils.book_new();
        
        // First Table: Top Rated Books
        var topRatedWorksheet = XLSX.utils.json_to_sheet([
            { 'Book Name': { v: firstbook, s: { font: { bold: true } } }, 'Book Rating': firstbookrating },
            { 'Book Name': { v: secondbook, s: { font: { bold: true } } }, 'Book Rating': secondbookrating },
            { 'Book Name': { v: thirdbook, s: { font: { bold: true } } }, 'Book Rating': thirdbookrating }
        ]);

        // Add the label above the first table
        topRatedWorksheet["A1"] = { v: "Top Rated Books", t: "s", s: { font: { bold: true }, alignment: { horizontal: "center" } } };

        // Set column widths for the first table
        var topRatedColumnWidths = [
            { wch: 20 }, // Width for 'Book Name' column
            { wch: 15 } // Width for 'Book Rating' column
        ];
        topRatedWorksheet["!cols"] = topRatedColumnWidths;
        
        // Second Table: Subscriptions Revenue
       var Omega = '$@Model.OmegaSubscriptionMoney';
       var Alpha = '$@Model.AlphaSubscriptionMoney';
        var Beta = '$@Model.BetaSubscriptionMoney';
        var subscriptionsWorksheet = XLSX.utils.json_to_sheet([
            { 'Subscription Name': { v: "Omega", s: { font: { bold: true } } }, 'Subscription Revenue': Omega },
            { 'Subscription Name': { v: "Alpha", s: { font: { bold: true } } }, 'Subscription Revenue': Alpha },
            { 'Subscription Name': { v: "Beta", s: { font: { bold: true } } }, 'Subscription Revenue': Beta }
        ]);

        // Add the label above the second table
        subscriptionsWorksheet["D1"] = { v: "Subscriptions Revenue", t: "s", s: { font: { bold: true }, alignment: { horizontal: "center" } } };

        // Set column widths for the second table
        var subscriptionsColumnWidths = [
            { wch: 25 }, // Width for 'Subscription Name' column
            { wch: 20 } // Width for 'Subscription Revenue' column
        ];
        subscriptionsWorksheet["!cols"] = subscriptionsColumnWidths;
        
        // Add both worksheets to the workbook
        XLSX.utils.book_append_sheet(workbook, topRatedWorksheet, "Top Rated Books");
        XLSX.utils.book_append_sheet(workbook, subscriptionsWorksheet, "Subscriptions Revenue");

        // Generate the Excel file
        var excelBuffer = XLSX.write(workbook, { bookType: "xlsx", type: "array" });
        saveAsExcelFile(excelBuffer, "report.xlsx");
    });

    function saveAsExcelFile(buffer, fileName) {
        var blob = new Blob([buffer], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" });
        var url = URL.createObjectURL(blob);
        var link = document.createElement("a");
        link.href = url;
        link.download = fileName;
        link.click();
    }
</script>





<script type="text/javascript">
    function generatePieGraph(t, e) { !function () { var t = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame; window.requestAnimationFrame = t }(); var o, i, n = e.hasOwnProperty("pie") ? e.pie : "normal", r = e.values, a = e.colors, l = !!e.hasOwnProperty("animation") && e.animation, s = e.hasOwnProperty("animationSpeed") ? e.animationSpeed : 20, f = !!e.hasOwnProperty("fillTextData") && e.fillTextData, h = e.hasOwnProperty("fillTextColor") ? e.fillTextColor : "#fff", P = e.hasOwnProperty("fillTextPosition") ? e.fillTextPosition : "horizontal", u = e.hasOwnProperty("fillTextAlign") ? e.fillTextAlign : 1.85, c = e.hasOwnProperty("doughnutHoleSize") ? e.doughnutHoleSize : null, d = e.hasOwnProperty("doughnutHoleColor") ? e.doughnutHoleColor : "#fff", m = e.hasOwnProperty("offset") ? e.offset : null, p = null, g = L(e, "strokeStartEndPoints") ? e.isStrokePie.strokeStartEndPoints : "No", v = !!L(e, "overlayStroke") && e.isStrokePie.overlayStroke, k = L(e, "overlayStrokeColor") ? e.isStrokePie.overlayStrokeColor : "#eee", M = !L(e, "strokeAnimation") || e.isStrokePie.strokeAnimation, S = L(e, "strokeAnimationSpeed") ? e.isStrokePie.strokeAnimationSpeed : 10, y = L(e, "stroke") ? e.isStrokePie.stroke : 20, w = L(e, "fontSize") ? e.isStrokePie.fontSize : "60px", I = L(e, "textAlignement") ? e.isStrokePie.textAlignement : "center", A = L(e, "fontFamily") ? e.isStrokePie.fontFamily : "Arial", T = L(e, "fontWeight") ? e.isStrokePie.fontWeight : "bold", x = document.getElementById(t), b = x.getContext("2d"), O = x.width / 2, C = x.height / 2, F = O, z = 0, q = [], H = (o = 0, r.map(t => { o += t }), o), E = 0, R = 0; if (r.length > 1) for (var W = 0; W < r.length; W++) { var Y = 0 == W ? 0 : E; E = r[W] * (100 / H) + Y, q.push([Math.round(Y), Math.round(E), a[W]]) } function j() { q.forEach(function (t, e) { var o = t[0] / 100 * Math.PI * 2, i = null != m ? (t[1] - m / 10) / 100 * Math.PI * 2 : t[1] / 100 * Math.PI * 2, n = ((o = "Top" == p ? o - Math.PI / 2 : o) + (i = "Top" == p ? i - Math.PI / 2 : i)) / 2; offsetX = 0 == m || null == m ? 0 : Math.cos(n) * m, offsetY = 0 == m || null == m ? 0 : Math.sin(n) * m, b.beginPath(), b.moveTo(O + offsetX, C + offsetY), b.arc(O + offsetX, C + offsetY, F, o, i), b.fillStyle = t[2], b.fill(), b.fillStyle = d, b.beginPath(), b.moveTo(O, C), b.arc(O, C, c / 100 * C, 0, 2 * Math.PI), b.closePath(), b.fill() }) } function X(t) { return t / 100 * (2 * Math.PI) } function B(t, e, o, i, n, r, a) { b.beginPath(), b.arc(t, e, o, i, n, !1), b.strokeStyle = r, b.lineWidth = a, b.stroke() } function D(t, e) { b.clearRect(0, 0, x.width, x.height), 1 == e && (b.beginPath(), b.arc(O, C, F - y, X(0) - Math.PI / 2, X(100) - Math.PI / 2), b.strokeStyle = k, b.lineWidth = y, b.stroke()), b.font = T + " " + w + " " + A, b.textAlign = I, b.textBaseline = "middle", "Yes" == g && B(O, C, F - y / 2, X(0) - Math.PI / 2, X(.1) - Math.PI / 2, a[0], y), B(O, C, F - y, X(0) - Math.PI / 2, X(t) - Math.PI / 2, a[0], y), "Yes" == g && B(O, C, F - y / 2, X(t - .1) - Math.PI / 2, X(t) - Math.PI / 2, a[0], y), b.fillText(t + "%", O, C) } function L(t, e) { if ("object" == typeof t && null !== t) { if (t.hasOwnProperty(e)) return !0; for (var o in t) if (t.hasOwnProperty(o) && L(t[o], e)) return !0 } return !1 } !function e() { 1 == r.length && "stroke" == n ? function () { var t = 0; if (1 == M && 0 == v) var e = setInterval(function () { D(++t, v), t >= r[0] && clearInterval(e) }, S); else if (1 == v) { if (0 == M && D(r[0], v), 1 == M) var e = setInterval(function () { D(++t, v), t >= r[0] && clearInterval(e) }, S) } else D(r[0], v) }() : 1 == l && "normal" == n ? (b.clearRect(0, 0, x.width, x.height), j(), o = z / 100 * Math.PI * 2, b.globalCompositeOperation = "destination-in", b.beginPath(), b.moveTo(O, C), b.arc(O, C, F, 0, o), b.fill(), b.globalCompositeOperation = "source-over", z++ < 100 && setTimeout(function () { requestAnimationFrame(e) }, s)) : (j(), b.beginPath(), b.arc(O, C, F + 5, 0, 2 * Math.PI, !1), b.lineWidth = 30, b.strokeStyle = d, b.stroke()); var o; if (101 == z) { if (1 == f && "inner" == P) for (var c = 0; c < r.length; c++) { i = r[c] / H * Math.PI * 2; var m = C / u, g = "Top" == p ? O + m * Math.cos(R + i / 2 - Math.PI / 2) : O + m * Math.cos(R + i / 2), k = "Top" == p ? C + m * Math.sin(R + i / 2 - Math.PI / 2) : C + m * Math.sin(R + i / 2), y = r[c] * (100 / H); b.fillStyle = h, b.font = "bold 16px Arial", b.textAlign = "center", b.fillText(y.toFixed(1) + "%", g, k), R += i } if (1 == f && "horizontal" == P) { for (var w = '<div class="pie-horizontal-list"><ul>', c = 0; c < r.length; c++)w += '<li><span style="background: ' + a[c] + '"></span> ' + r[c] * (100 / H) + " %<li>"; w += "</ul></div>", x.insertAdjacentHTML("afterend", w) } if (1 == f && "vertical" == P) { for (var w = '<div class="pie-vertical-list-' + t + '"><ul>', c = 0; c < r.length; c++)w += '<li><span style="background: ' + a[c] + '"></span> ' + r[c] * (100 / H) + " %<li>"; w += "</ul></div>", x.parentElement.insertAdjacentHTML("beforeend", w) } } }() }





    var obj2 = {
        values: [@Model.OmegaSubscriptionMembers, @Model.AlphaSubscriptionMembers, @Model.BetaSubscriptionMembers],
        colors: ['#007bff', '#dc3545', '#ffc107'],
        animation: true,
        animationSpeed: 30,
        fillTextData: true,
        fillTextColor: '#fff',
        fillTextAlign: 1.50,
        fillTextPosition: 'inner',
        doughnutHoleSize: null,
        doughnutHoleColor: '#fff',
        offset: 1
    };



    //Generate myCanvas

    //Generate myCanvas2
    generatePieGraph('myCanvas2', obj2);

    function generateBarGraph(r) {
        if (function () {
            var r = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
            window.requestAnimationFrame = r
        }(), null == r.barData || null == r.barData || !Array.isArray(r.barData)) return !1;

        for (var a = r.hasOwnProperty("barId") ? r.barId : "rbar", e = r.hasOwnProperty("barStroke") ? r.barStroke : 50, i = r.hasOwnProperty("barSpaces") ? r.barSpaces : 80, n = r.hasOwnProperty("barDivision") ? r.barDivision : 5, t = r.hasOwnProperty("barColour") ? r.barColour : "#020202", o = r.hasOwnProperty("barInnerPadding") ? r.barInnerPadding : 80, s = r.hasOwnProperty("barDivisionPositionFromLineX") ? r.barDivisionPositionFromLineX : 20, l = r.hasOwnProperty("barDivisionPositionFromLineY") ? r.barDivisionPositionFromLineY : 20, h = !r.hasOwnProperty("barAnimation") || r.barAnimation, b = r.hasOwnProperty("barAnimationSpeed") ? r.barAnimationSpeed : 1, u = r.hasOwnProperty("barTextFont") ? r.barTextFont : "14px Arial", y = !r.hasOwnProperty("barScaleDivisionReqX") || r.barScaleDivisionReqX, v = !r.hasOwnProperty("barScaleDivisionReqY") || r.barScaleDivisionReqY, d = r.hasOwnProperty("barScaleDivisionY") ? r.barScaleDivisionY : null, m = r.hasOwnProperty("barScaleDivisionStroke") ? r.barScaleDivisionStroke : 1, w = r.hasOwnProperty("barScaleDivisionColour") ? r.barScaleDivisionColour : "#333", p = r.hasOwnProperty("barAxisLineStroke") ? r.barAxisLineStroke : 1, P = r.hasOwnProperty("barScaleDivisionColour") ? r.barAxisLineColour : "#333", c = r.hasOwnProperty("barMaxHeight") ? r.barMaxHeight : null, S = document.getElementById(a), A = S.getContext("2d"), O = S.width, D = S.height, f = [], g = [], x = function (r) {
            for (var a = [], e = [], i = [], n = [], t = 0; t < r.length; t++) e.push(Object.values(r[t])[0]), i.push(Object.keys(r[t])[0]), n.push(Object.values(r[t])[0]);
            return a.highest = Math.max(...e), a.xdata = n, a.ydata = i, a
        }(r.barData), k = D - o, F = null == c ? x.highest : c, T = ((k - o) / F).toFixed(1), q = o + i - e / 2, C = 0; C < x.ydata.length; C++) {
            var I = x.xdata[C] * T,
                L = k - I;
            f.push(q), g.push(Math.round(L)), 0 == h && (Array.isArray(t) ? B(A, t[C], e, q, k, L) : B(A, t, e, q, k, L)), q += i
        }

        for (var M = 0; M < x.ydata.length; M++) {
            A.font = u;
            A.textAlign = "center";
            A.fillText(x.ydata[M], f[M], D - o + s);
            // Add the rating below the book name
            A.fillText(Object.values(r.barData[M])[0], f[M], D - o + s + 20);
            y && z(A, m, w, f[M], k - 2, f[M], k + 2);
        }

        var R = null == c ? x.highest : c,
            Y = 0,
            W = 0,
            X = 0;

        null != d ? (W = Math.round(R / d), Y = d) : (W = n, Y = Math.round(R / n));

        for (M = 0; M < W; M++) {
            X = (X += Y) <= R ? X : R;
            var j = Math.round(X * T);
            A.font = u;
            A.textBaseline = "middle";
            A.fillText(X, o - l, k - j);
            v && H(A, m, w, o - 2, k - j, o + 2, k - j)
        }

        function B(r, a, e, i, n, t) {
            r.beginPath(), r.strokeStyle = a, r.lineWidth = e, r.moveTo(i, n), r.lineTo(i, t), r.stroke()
        }

        function H(r, a, e, i, n, t, o) {
            r.strokeStyle = e, r.lineWidth = a, r.beginPath(), r.moveTo(i, n), r.lineTo(t, o), r.stroke()
        }

        function z(r, a, e, i, n, t, o) {
            r.strokeStyle = e, r.lineWidth = a, r.beginPath(), r.moveTo(i, n), r.lineTo(t, o), r.stroke()
        }

        ! function () {
            var r = k;
            if (0 == b) {
                var a = 0;

                ! function i() {
                    null != g[a] && (Array.isArray(t) ? B(A, t[a], e, f[a], k, r) : B(A, t, e, f[a], k, r), r > g[a] ? requestAnimationFrame(i) : r <= g[a] && (r = k, a++, requestAnimationFrame(i)), r -= 1)
                }()
            } else {
                var a = 0,
                    i = setInterval(function () {
                        null == f[a] && clearInterval(i), Array.isArray(t) ? B(A, t[a], e, f[a], k, r) : B(A, t, e, f[a], k, r), r <= g[a] && (r = k, a++), r -= 1
                    }, b)
            }
        }();

        A.strokeStyle = P, A.lineWidth = p, A.beginPath(), A.moveTo(o, D - o), A.lineTo(O - o, D - o), A.moveTo(o, o - 10), A.lineTo(o, D - o), A.stroke()
    }

    var data = [
        { '@((await ViewBag.TopBooks)[0].Name)': @((await ViewBag.TopBooks)[0].Rating) },
        { '@((await ViewBag.TopBooks)[1].Name)': @((await ViewBag.TopBooks)[1].Rating) },
        { '@((await ViewBag.TopBooks)[2].Name)': @((await ViewBag.TopBooks)[2].Rating) }
    ];

    var barcolor = ['#5c5fff', '#bb48e6', '#f12bc3'];

    var obj = {
        barId: 'myCanvas',
        barData: data,
        barColour: barcolor,
        barStroke: 40,
        barSpaces: 150,
        barInnerPadding: 80,
        barDivisionPositionFromLineX: 20,
        barDivisionPositionFromLineY: 20,
        barAnimation: true,
        barAnimationSpeed: 1,
        barTextFont: "14px Arial",
        barDivision: 5,
        barScaleDivisionReqX: true,
        barScaleDivisionReqY: true,
        barScaleDivisionY: 20,
        barScaleDivisionStroke: 1,
        barScaleDivisionColour: '#333',
        barAxisLineStroke: 2,
        barAxisLineColour: '#333',
        barMaxHeight: 120
    };

    generateBarGraph(obj);


</script>




